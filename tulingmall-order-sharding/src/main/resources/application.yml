#server:
#  port: 8844
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/micromall?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
    username: root
    password: root
    druid:
      initial-size: 5 #连接池初始化大小
      min-idle: 10 #最小空闲连接数
      max-active: 20 #最大连接数
      web-stat-filter:
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*" #不统计这些请求数据
      stat-view-servlet: #访问监控网页的登录用户名和密码
        login-username: druid
        login-password: druid
#  分库分表配置 与 application.properties中的策略一致。
#  shardingsphere:
#    datasource:
#      names: ds,ds0,ds1
#      ds:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/micromall?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#        initialSize: 5
#        minIdle: 10
#        maxActive: 30
#        validationQuery: SELECT 1 FROM DUAL
#        username: root
#        password: root
#      ds0:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/shop_ds_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#        initialSize: 5
#        minIdle: 10
#        maxActive: 30
#        validationQuery: SELECT 1 FROM DUAL
#        username: root
#        password: root
#      ds1:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/shop_ds_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#        initialSize: 5
#        minIdle: 10
#        maxActive: 30
#        validationQuery: SELECT 1 FROM DUAL
#        username: root
#        password: root
#    sharding:
#      default-data-source-name: ds
#      default-database-strategy:
#        inline:
#          sharding-column: member_id
#          algorithm-expression: ds$->{member_id % 2 }
#      tables:
#        oms_order:
#          actual-data-nodes: ds$->{0..1}.oms_order_$->{0..1}
#          database-strategy:
#            inline:
#              sharding-column: id
#              algorithm-expresson: ds$->{id % 2}
#          table-strategy:
#            inline:
#              sharding-column: id
#              algorithm-expresson: oms_order_$->{((id+1) % 4).intdiv(2)}
#          key-generator:
#            column: id
#            type: CUSTOM
#            props:
#              worker.id: 123
#              redis:
#                prefix: 'order_id_prefix:'
#        oms_order_item:
#          actual-data-nodes: ds$->{0..1}.oms_order_item_$->{0..1}
#          database-strategy:
#            inline:
#              sharding-column: order_id
#              algorithm-expresson: ds$->{id % 2}
#          table-strategy:
#            inline:
#              sharding-column: order_id
#              algorithm-expresson: oms_order_item_$->{((order_id+1) % 4).intdiv(2)}
#          key-generator:
#            column: id
#            type: SNOWFLAKE
#            props:
#              worker.id: 123
#      binding-tables: oms_order,oms_order_item
#    props:
#      sql:
#        show: true

#  redis:
#    host: 192.168.65.232 #Redis服务器地址
#    database: 0 # Redis数据库索引（默认为0）
#    port: 6379 # Redis服务器连接端口
#    password: 123456 # Redis服务器连接密码（默认为空）
#    jedis:
#      pool:
#        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
#        max-wait: -1ms # 连接池最大阻塞等待时间（使用负值表示没有限制）
#        max-idle: 8 # 连接池中的最大空闲连接
#        min-idle: 0 # 连接池中的最小空闲连接
#    timeout: 3000ms # 连接超时时间（毫秒）
#  rabbitmq:
#    host: 192.168.65.232
#    port: 5672
#    virtual-host: /
#    username: admin
#    password: admin
#    publisher-confirms: true #如果对异步消息需要回调必须设置为true
#  application:
#    name: tulingmall-order
#  cloud:
#    nacos:
#      discovery:
#        server-addr: 192.168.65.232:8848
  main:
    allow-bean-definition-overriding: true
mybatis:
  mapper-locations:
    - classpath:dao/*.xml
    - classpath*:com/**/mapper/*.xml

#feign:
#  client:
#    config:
#      default:
#        loggerLevel: full
#        requestInterceptors:
#          - com.tuling.tulingmall.feignapi.interceptor.HeaderInterceptor
#        readTimeout: 3000
#        connectTimeout: 3000
#logging:
#  level:
#    com:
#      tuling:
#        tulingmall:
#          feignapi:
#            ums:
#              UmsMemberReceiveAddressFeignApi: debug

# 自定义redis键值
#redis:
#  key:
#    prefix:
#      authCode: "portal:authCode:"
#      orderId: "portal:orderId:"
#    expire:
#      authCode: 90 # 验证码超期时间
## 自定义消息队列名称
#rabbitmq:
#  queue:
#    name:
#      cancelOrder: cancelOrderQueue

#支付-当面付qrcode存储与访问路径设置
#trade:
#  zhifu:
#    qrcode:
#      aliPayPath: /alipay
#      weChatPath: /wechat
#      storePath: C:/temp/qr-code
#      httpBasePath: /static/qrcode
#      paySuccessCallBack: http://yangguo.natapp1.cc/order/paySuccess


rocketmq:
  name-server: 192.168.65.232:9876 #连接超时时间
  producer:
    send-message-timeout: 30000 #发送消息超时时间
    group: order-group
  tulingmall:
    scheduleTopic: order-status-check #定时任务
    cancelGroup: cancel-order #消费组业务逻辑,取消超时未支付订单
    transGroup: cart-delete #事务消息群组
    transTopic: order-cart #订单-购物车主题
    asyncOrderTopic: async-order #异步订单topic
    asyncOrderGroup: async-order-group #异步下单消息消费
#rocketmq:
#  name-server: localhost:9876
#  producer:
#    group: tl
#  tulingmall:
#    cancelGroup: tl
#    scheduleTopic: ts
#    transGroup: tg
#    transTopic: tt
#    asyncOrderTopic: tot